name: Deploy GloboClima

on:
  push:
    branches:
      - main
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Build Lambda
        working-directory: src/GloboClima.Lambda
        run: |
          dotnet publish -c Release -r linux-x64 --self-contained false

      - name: SAM Deploy
        working-directory: infrastructure/cloudformation
        run: |
          if [[ "${GITHUB_REF_NAME}" == "main" ]]; then
            ENVIRONMENT=prod
            STACK_NAME=GloboClimaStack-Prod
          else
            ENVIRONMENT=dev
            STACK_NAME=GloboClimaStack-Dev
          fi

          sam deploy \
            --template-file template.yaml \
            --stack-name $STACK_NAME \
            --capabilities CAPABILITY_IAM \
            --resolve-s3 \
            --region $AWS_REGION \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset \
            --parameter-overrides Environment=$ENVIRONMENT \
                                   JWTSecret=${{ secrets.JWT_SECRET_$ENVIRONMENT }} \
                                   OpenWeatherMapApiKey=${{ secrets.OWM_API_KEY_$ENVIRONMENT }}
