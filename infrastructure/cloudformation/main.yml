AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'GloboClima - Deploy Free Tier'

Parameters:
  Environment:
    Type: String
    Default: 'dev'
  
  JWTSecret:
    Type: String
    NoEcho: true
  
  OpenWeatherMapApiKey:
    Type: String
    NoEcho: true

Resources:
  # DynamoDB Table
  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub 'GloboClima-Users-${Environment}'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: Id
          AttributeType: S
      KeySchema:
        - AttributeName: Id
          KeyType: HASH

  ApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'globoclima-${Environment}'
      Runtime: provided.al2023  # Runtime customizado para .NET 9
      CodeUri: ../GloboClima.Lambda/bin/Release/net9.0/linux-x64/publish/
      Handler: bootstrap
      MemorySize: 256  # Aumentado um pouco
      Timeout: 30
      Environment:
        Variables:
          DYNAMODB_TABLE_NAME: !Ref UsersTable
          JWT__SECRET: !Ref JWTSecret
          JWT__ISSUER: 'GloboClima'
          JWT__AUDIENCE: 'GloboClima-Users'
          OPENWEATHERMAP__APIKEY: !Ref OpenWeatherMapApiKey
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
        RootEvent:
          Type: Api  
          Properties:
            Path: /
            Method: ANY

  # S3 para Frontend
  FrontendBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'globoclima-${Environment}-${AWS::AccountId}'
      WebsiteConfiguration:
        IndexDocument: index.html
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref FrontendBucket
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal: '*'
            Action: s3:GetObject
            Resource: !Sub '${FrontendBucket}/*'

Outputs:
  ApiUrl:
    Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod'
    
  FrontendUrl:
    Value: !Sub 'http://${FrontendBucket}.s3-website-${AWS::Region}.amazonaws.com'
    
  BucketName:
    Value: !Ref FrontendBucket