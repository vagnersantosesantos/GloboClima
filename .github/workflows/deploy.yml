name: Deploy GloboClima (Fixed)

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    
    - name: Configure AWS
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Clean Previous Stack (if exists)
      run: |
        echo "🧹 Cleaning previous failed stack..."
        aws cloudformation delete-stack --stack-name globoclima-dev --region ${{ env.AWS_REGION }} || true
        aws cloudformation wait stack-delete-complete --stack-name globoclima-dev --region ${{ env.AWS_REGION }} || true
        echo "✅ Cleanup completed"
    
    - name: Build Lambda
      run: |
        echo "🔨 Building Lambda..."
        cd src/GloboClima.Lambda
        dotnet publish -c Release -r linux-x64 --self-contained true -o publish
        
        cd publish
        cat > bootstrap << 'EOF'
        #!/bin/bash
        set -euo pipefail
        exec ./GloboClima.Lambda
        EOF
        chmod +x bootstrap
        echo "✅ Lambda built successfully"
    
    - name: Install SAM CLI
      run: |
        pip install aws-sam-cli
        sam --version
    
    - name: Deploy Infrastructure
      run: |
        echo "☁️ Deploying with corrected template..."
        
        sam deploy \
          --template-file infrastructure/cloudformation/simple-deploy.yml \
          --stack-name globoclima-dev \
          --parameter-overrides \
            JWTSecret="${{ secrets.JWT_SECRET }}" \
            OpenWeatherMapApiKey="${{ secrets.OPENWEATHERMAP_API_KEY }}" \
          --capabilities CAPABILITY_IAM \
          --resolve-s3 \
          --region ${{ env.AWS_REGION }} \
          --no-confirm-changeset \
          --no-fail-on-empty-changeset
    
    - name: Deploy Frontend
      run: |
        echo "🎨 Building and deploying frontend..."
        cd src/GloboClima.Frontend
        dotnet publish -c Release -o dist
        
        BUCKET=$(aws cloudformation describe-stacks \
          --stack-name globoclima-dev \
          --query 'Stacks[0].Outputs[?OutputKey==`BucketName`].OutputValue' \
          --output text)
        
        echo "Uploading to bucket: $BUCKET"
        aws s3 sync dist/wwwroot/ s3://$BUCKET/ --delete
        
        echo "🎉 DEPLOY SUCCESS!"
        API_URL=$(aws cloudformation describe-stacks \
          --stack-name globoclima-dev \
          --query 'Stacks[0].Outputs[?OutputKey==`ApiUrl`].OutputValue' \
          --output text)
        FRONTEND_URL=$(aws cloudformation describe-stacks \
          --stack-name globoclima-dev \
          --query 'Stacks[0].Outputs[?OutputKey==`FrontendUrl`].OutputValue' \
          --output text)
        
        echo "📡 API: $API_URL"
        echo "🌐 Frontend: $FRONTEND_URL"